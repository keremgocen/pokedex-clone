name: dev
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:

# Cancel the workflow in progress in newer build is about to start.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GO111MODULE: "on"
  RUN_BASE_COVERAGE: "on" # Runs test for PR base in case base test coverage is missing.
  TARGET_DELTA_COV: 90 # Target coverage of changed lines, in percents

jobs:
  context-dump:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Build
        run: go mod download && go build -a ./...
  test:
    name: Test
    needs: [build, lint]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
      - name: Go cache
        uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-cache-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-cache
      - name: Restore base test coverage
        uses: actions/cache@v3
        with:
          path: |
            unit-base.txt
          # Use base sha for PR or new commit hash for master/main push in test result key.
          key: ${{ runner.os }}-unit-test-coverage-${{ (github.event.pull_request.base.sha != github.event.after) && github.event.pull_request.base.sha || github.event.after }}
      - name: Checkout base code
        if: env.RUN_BASE_COVERAGE == 'on' && steps.benchmark-base.outputs.cache-hit != 'true' && github.event.pull_request.base.sha != ''
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: __base
      - name: Run test for base code
        if: env.RUN_BASE_COVERAGE == 'on' && steps.benchmark-base.outputs.cache-hit != 'true' && github.event.pull_request.base.sha != ''
        run: |
          cd __base
          make | grep test-unit && (make test-unit && go tool cover -func=./unit.coverprofile | sed -e 's/.go:[0-9]*:\t/.go\t/g' | sed -e 's/\t\t*/\t/g'  > ../unit-base.txt) || echo "No test-unit in base"
      - name: Test
        id: test
        run: |
          make test-unit
          go tool cover -func=./unit.coverprofile | sed -e 's/.go:[0-9]*:\t/.go\t/g' | sed -e 's/\t\t*/\t/g'  > unit.txt
          OUTPUT=$(test -e unit-base.txt && (diff unit-base.txt unit.txt || exit 0) || cat unit.txt)
          OUTPUT="${OUTPUT//'%'/'%25'}"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          TOTAL=$(grep 'total:' unit.txt)
          echo "::set-output name=diff::$OUTPUT"
          echo "::set-output name=total::$TOTAL"
      - name: Store base coverage
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
        run: cp unit.txt unit-base.txt
      - name: Comment Test Coverage
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: unit-test
          message: |
            ### Unit Test Coverage
            ${{ steps.test.outputs.total }}
            <details><summary>Coverage diff with base branch</summary>
 
            ```diff
            ${{ steps.test.outputs.diff }}
            ```
            </details>
